
play.http.secret.key="{{ thehive_crypto_secret }}"

http.port = {{ thehive_http_port }}
http.address = {{ thehive_http_addr }}

# ElasticSearch
search {
  # Name of the index
  index = {{ thehive_es['index'] }}
  # Name of the ElasticSearch cluster
  cluster = {{ thehive_es['cluster'] }}
  # Address of the ElasticSearch instance
  host = ["{{ thehive_es['endpoint'] }}"]
}

auth {

  method.basic = false

{% if thehive_auth_vouch['enabled'] %}
  method.header = true
  header.name = {{ thehive_auth_vouch['logon_header'] }}
{% endif %}

{% if thehive_auth_ldap['enabled'] %}
  type = [ldap]

  ldap {
		# LDAP server name or address. Port can be specified (host:port). This parameter is required.
		serverNames = ["{{ thehive_auth_ldap['servers'] | map('quote') | join(', ') }}"]

		# Use SSL to connect to directory server
		useSSL = {{ thehive_auth_ldap['use_ssl']|lower }}

		# Account to use to bind on LDAP server. This parameter is required.
		bindDN = "{{ thehive_auth_ldap['bind_dn'] }}"

		# Password of the binding account. This parameter is required.
		bindPW = "{{ thehive_auth_ldap['bind_pw'] }}"

		# Base DN to search users. This parameter is required.
		baseDN = "{{ thehive_auth_ldap['search_base'] }}"

		# Filter to search user {0} is replaced by user name. This parameter is required.
		filter = "(thehive_auth_ldap['username_attribute']={0})"
	}
{% else %}
  type = [local]
{% endif %}
}



# Maximum time between two requests without requesting authentication
session {
  warning = 5m
  inactivity = 1h
}

{% if thehive_cortex_servers is defined %}
play.modules.enabled += connectors.cortex.CortexConnector
cortex {
  {% for cortex_server_name, cortex_server_options in thehive_cortex_servers.iteritems() %}
  "{{ cortex_server_name }}" {
    {% for k, v in cortex_server_options.iteritems() -%}
      {{ k }}="{{ v }}"
    {% endfor %}

  }
  {% endfor %}
}
{% endif %}

{% if thehive_misp_servers is defined %}
play.modules.enabled += connectors.misp.MispConnector
misp {
  {% for misp_server_name, misp_server_options in thehive_misp_servers.iteritems() %}
  "{{ misp_server_name }}" {
    {% for k, v in misp_server_options.iteritems() -%}
      {% if k == 'tags' %}
        {{ k }}={{ v|to_json}}
      {% else %}
        {{ k }}="{{ v }}"
      {% endif %}
    {% endfor %}

  }
  {% endfor %}

  {% if thehive_misp_options is defined %}
    {% for k, v in thehive_misp_options.iteritems() -%}
      {{ k }}="{{ v }}"
    {% endfor %}
  {% endif %}
}
{% endif %}
